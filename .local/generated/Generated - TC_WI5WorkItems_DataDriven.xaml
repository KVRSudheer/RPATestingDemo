<Activity mc:Ignorable="sap sap2010" x:Class="TestExecutionRunReportTemplate" this:TestExecutionRunReportTemplate.WIID="82303689" this:TestExecutionRunReportTemplate.Status="Completed" this:TestExecutionRunReportTemplate.__invokedWorkflowName__="Test Cases/AcmeSystem1/Functional Tests/TC_WI5WorkItems_DataDriven.xaml" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="WIID" Type="InArgument(x:String)" />
    <x:Property Name="Status" Type="InArgument(x:String)" />
    <x:Property Name="__invokedWorkflowName__" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>2894.66666666667,7187.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TestExecutionRunReportTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TestExecutionRunReportTemplate" sap:VirtualizedContainerService.HintSize="2904.66666666667,7122.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Assets" />
      <Variable x:TypeArguments="s:DateTime" Name="executionStartedAt" />
      <Variable x:TypeArguments="x:String" Name="executionStartDate" />
      <Variable x:TypeArguments="x:String" Name="executionStartTime" />
      <Variable x:TypeArguments="x:String" Name="testCaseName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Pre-Processing for Report Generation" sap:VirtualizedContainerService.HintSize="2842.66666666667,1030.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Configured Assets" sap:VirtualizedContainerService.HintSize="814,115.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="TestFramework\Utils\InitAllAssets.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Assets">[Assets]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_AssetFile">Data/Assets.json</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Sequence DisplayName="Get Test Case Name" sap:VirtualizedContainerService.HintSize="814,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobInfo" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="388,25.3333333333333" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_1" Result="[jobInfo]" />
        <Assign DisplayName="Assign Test Case Name" sap:VirtualizedContainerService.HintSize="388,53.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[testCaseName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[jobInfo.WorkflowName.Replace("Generated - ","")]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </Sequence>
      <ui:MultipleAssign DisplayName="Set the Execution details" sap:VirtualizedContainerService.HintSize="814,54" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:DateTime">[executionStartedAt]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[executionStartDate]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[executionStartedAt.ToString("dd-MMM-yyyy")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[executionStartTime]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[executionStartedAt.ToString("HH:mm:ss")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <If Condition="[Directory.Exists(Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;))]" DisplayName="Create Reports Folder" sap:VirtualizedContainerService.HintSize="814,454.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Scope to Clear Assertion Images if Any" sap:VirtualizedContainerService.HintSize="434,289.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Report Folder Exists" sap:VirtualizedContainerService.HintSize="372,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Report Folder exists already, clearing out previous generated Reports&quot;]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Loop through each html report in the Report Folder" sap:VirtualizedContainerService.HintSize="372,54" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;),&quot;*.html&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="ExecutionReportFile" />
                  </ActivityAction.Argument>
                  <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Assertion Image" sap:VirtualizedContainerService.HintSize="284,136.666666666667" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[ExecutionReportFile]" />
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </If.Then>
        <If.Else>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;)]" />
        </If.Else>
      </If>
      <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.html" Folder="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;)]" sap:VirtualizedContainerService.HintSize="814,83.3333333333333" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="reportFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,189.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="354,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_2" Path="[reportFile.FullName]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFileX>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Placeholder_1" UnSafe="False" WorkflowFileName="Test Cases/AcmeSystem1/Functional Tests/TC_WI5WorkItems_DataDriven.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="WIID">[WIID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Status">[Status]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Post-Processing for Report Generation" sap:VirtualizedContainerService.HintSize="2842.66666666667,5822" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="jsonResponse" />
        <Variable x:TypeArguments="njl:JObject" Name="jObject" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Orchestrator HTTP Request - To Get the Current Job ID" DisplayName="Orchestrator HTTP Request - To Get the Current Job ID" sap:VirtualizedContainerService.HintSize="2780.66666666667,70.6666666666667" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_1" Method="GET" RelativeEndpoint="[&quot;/odata/Jobs?$filter=LocalSystemAccount eq '&quot;+environment.UserDomainName+&quot;\&quot;+Environment.UserName+&quot;' and HostMachineName eq '&quot;+Environment.MachineName+&quot;' and state eq 'Running'&quot;]" Result="[jsonResponse]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:OrchestratorHttpRequest>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Job Execution Response" DisplayName="Deserialize JSON - Job Execution Response" sap:VirtualizedContainerService.HintSize="2780.66666666667,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jObject]" JsonString="[jsonResponse]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:DeserializeJson>
      <If sap2010:Annotation.AnnotationText="Check if the run is registered in Orchestrator" Condition="[jObject(&quot;value&quot;).Count &gt; 0]" DisplayName="Check if the run is registered in Orchestrator" sap:VirtualizedContainerService.HintSize="2780.66666666667,5492" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Scope to Generate Report" sap:VirtualizedContainerService.HintSize="2400.66666666667,5296" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="organizationID" />
              <Variable x:TypeArguments="x:String" Name="orchestratorBaseURL" />
              <Variable x:TypeArguments="x:String" Name="JobId" />
              <Variable x:TypeArguments="x:String" Name="executionEndTime" />
              <Variable x:TypeArguments="x:String" Name="str_bearerToken" />
              <Variable x:TypeArguments="x:String" Name="tableContent" />
              <Variable x:TypeArguments="x:Int32" Name="testStepsPassed" />
              <Variable x:TypeArguments="x:Int32" Name="testStepsFailed" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="GET Orch Folder ID, Base URL, Execution ID&#xA;Set Execution End Time" DisplayName="Set Orchestrator Execution Details" sap:VirtualizedContainerService.HintSize="2338.66666666667,99.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[organizationID]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[jObject("value")(0)("OrganizationUnitId").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[orchestratorBaseURL]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[jObject("@odata.context").ToString.Split({"/odata/"},StringSplitOptions.RemoveEmptyEntries)(0).ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[JobId]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[jObject("value")(0)("Id").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[executionEndTime]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <Sequence sap2010:Annotation.AnnotationText="Scope to fetch Bearer token from Orchestrator Authenticate Post API call with registered client credentials" DisplayName="Fetch Bearer token for downloading Assertions" sap:VirtualizedContainerService.HintSize="2338.66666666667,5057.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="int_apiStsCode" />
                <Variable x:TypeArguments="x:String" Name="testSetExecutionID" />
                <Variable x:TypeArguments="njl:JArray" Name="arrayJObject" />
                <Variable x:TypeArguments="x:Int32" Name="responseStatus" />
                <Variable x:TypeArguments="x:String" Name="responseContent" />
                <Variable x:TypeArguments="upr:ILocalResource" Name="responseAttachment" />
                <Variable x:TypeArguments="x:Int32" Name="rowCounter" />
                <Variable x:TypeArguments="x:String" Name="htmlTemplate" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="API call to fetch the Bearer token with Client Credentials Post Method Authenticate API" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Private: Authenticate HTTP Request" EnableSSLVerification="True" EndPoint="[if(orchestratorBaseURL.ToLower.Contains(&quot;cloud.uipath.com&quot;),&quot;https://cloud.uipath.com&quot;+&quot;/identity_/connect/token&quot;,orchestratorBaseURL+&quot;/identity/connect/token&quot;)]" sap:VirtualizedContainerService.HintSize="2276.66666666667,134" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[jsonResponse]" StatusCode="[int_apiStsCode]" TimeoutMS="6000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <InArgument x:TypeArguments="x:String" x:Key="grant_type">client_credentials</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="client_id">[Assets("ClientID").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="client_secret">[Assets("ClientSecret").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="scope">[Assets("ApplicationScope").ToString]</InArgument>
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <Switch x:TypeArguments="x:Boolean" DisplayName="Switch - to check Authentication Status" Expression="[int_apiStsCode=200]" sap:VirtualizedContainerService.HintSize="2276.66666666667,54" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence x:Key="True" DisplayName="Scope to fetch Bearer Token" sap:VirtualizedContainerService.HintSize="496,309.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Authentication Response" DisplayName="Deserialize JSON - Authentication Response" sap:VirtualizedContainerService.HintSize="434,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[jObject]" JsonString="[jsonResponse]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:DeserializeJson>
                  <Assign DisplayName="Read Bearer Token" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_bearerToken]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[jObject("access_token").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence x:Key="False" DisplayName="Scope to report Error" sap:VirtualizedContainerService.HintSize="416,382" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message - Authentication Response" sap:VirtualizedContainerService.HintSize="354,54" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[int_apistscode.ToString+jsonResponse]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Authentication Response" DisplayName="Deserialize JSON - Authentication Response" sap:VirtualizedContainerService.HintSize="354,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jObject]" JsonString="[jsonResponse]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:DeserializeJson>
                  <Throw DisplayName="Throw - Authenticaiton Failure Details" Exception="[new Exception(&quot;Failed with error &quot;+jObject(&quot;error&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="354,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </Switch>
              <Sequence sap2010:Annotation.AnnotationText="Scope to generate Test Run level execution Report" DisplayName="Test Case Run Execution Report Generation" sap:VirtualizedContainerService.HintSize="2276.66666666667,115.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="TotalExecutionTime" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Orchestrator API call to get Test Case Execution Details" DisplayName="Orchestrator API call to get Test Case Execution Details" sap:VirtualizedContainerService.HintSize="478.666666666667,70.6666666666667" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_2" Method="GET" RelativeEndpoint="[&quot;/odata/TestCaseExecutions?$expand=TestCase($expand%3DDefinition),TestCaseAssertions&amp;$filter=JobId eq &quot;+JobId]" Result="[jsonResponse]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:OrchestratorHttpRequest>
                <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Test Case Execution Log" DisplayName="Deserialize JSON - Test Case Execution Log" sap:VirtualizedContainerService.HintSize="478.666666666667,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[jObject]" JsonString="[jsonResponse]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeserializeJson>
                <ui:DeserializeJsonArray sap2010:Annotation.AnnotationText="Deserialize JSON - Test Case Assertion Details" DisplayName="Deserialize JSON - Test Case Assertion Details" sap:VirtualizedContainerService.HintSize="478.666666666667,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[arrayJObject]" JsonString="[JObject(&quot;value&quot;)(0)(&quot;TestCaseAssertions&quot;).ToString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeserializeJsonArray>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="Set Execution Details - Total Execution Time, Test Set Execution ID, Assertions Row Counter" DisplayName="Set Execution Details" sap:VirtualizedContainerService.HintSize="478.666666666667,224" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[TotalExecutionTime]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[String.Format("{0:hh\:mm\:ss}", Now - executionStartedAt)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[testSetExecutionID]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[JObject("value")(0)("TestSetExecutionId").ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">[rowCounter]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">1</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="loop through each Assertion details to build Test Assertion details for Test Case Execution Report" DisplayName="Loop through each Test Case Assertions" sap:VirtualizedContainerService.HintSize="478.666666666667,99.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrayJObject]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="njl:JObject">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="njl:JObject" Name="currentItem" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Scope to loop through each Assertion details to build Test Assertion details for Test Case Execution Report" sap:VirtualizedContainerService.HintSize="672,886" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="str_base64Image" />
                          <Variable x:TypeArguments="s:Byte[]" Name="imageBytes" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Set Execution Details - Total Execution Time, Test Set Execution ID, Assertions Row Counter" DisplayName="Set Execution Details" sap:VirtualizedContainerService.HintSize="610,99.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Int32">[testStepsPassed]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Int32">[If(currentItem("Succeeded").ToString.ToLower="true",testStepsPassed+1,testStepsPassed)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Int32">[testStepsFailed]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Int32">[If(currentItem("Succeeded").ToString.ToLower&lt;&gt;"true",testStepsFailed+1,testStepsFailed)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[str_base64Image]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:MultipleAssign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through each Previously Downloaded Assertion Image" DisplayName="Loop through each Previously Downloaded Assertion Image" sap:VirtualizedContainerService.HintSize="610,84.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Directory.GetFiles(Environment.CurrentDirectory,&quot;*.jpg&quot;)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="assertionImage" />
                              </ActivityAction.Argument>
                              <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Assertion Image" sap:VirtualizedContainerService.HintSize="284,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[assertionImage]" />
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Get Assertion Image with Orchestrator HTTP Request" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Get Assertion HTTP Request" EnableSSLVerification="True" EndPoint="[orchestratorBaseURL+&quot;/api/TestAutomation/GetAssertionScreenshot?testCaseAssertionId=&quot;+currentItem(&quot;Id&quot;).ToString]" sap:VirtualizedContainerService.HintSize="610,117.333333333333" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" ResponseAttachment="[responseAttachment]" Result="[responseContent]" StatusCode="[responseStatus]" TimeoutMS="6000">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer "+str_bearerToken]</InArgument>
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <InArgument x:TypeArguments="x:String" x:Key="OrganizationUnitId">[organizationID]</InArgument>
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:HttpClient>
                        <If Condition="[Directory.GetFiles(Environment.CurrentDirectory,&quot;*.jpg&quot;).Count&gt;0]" DisplayName="Check if we have Assertion image" sap:VirtualizedContainerService.HintSize="610,54" sap2010:WorkflowViewState.IdRef="If_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Get the Base64 Value of the image" DisplayName="Get the Base64 Value of the image" sap:VirtualizedContainerService.HintSize="434,84" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="s:Byte[]">[imageBytes]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="s:Byte[]">[File.ReadAllBytes(Directory.GetFiles(Environment.CurrentDirectory,"*.jpg").First())]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[str_base64Image]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(imageBytes)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                          </If.Then>
                          <If.Else>
                            <Assign DisplayName="Set Base 64 as Empty" sap:VirtualizedContainerService.HintSize="434,84.6666666666667" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[str_base64Image]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through each Previously Downloaded Assertion Image" DisplayName="Loop through each Previously Downloaded Assertion Image" sap:VirtualizedContainerService.HintSize="610,84.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(Environment.CurrentDirectory,&quot;*.jpg&quot;)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="assertionImage" />
                              </ActivityAction.Argument>
                              <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Assertion Image" sap:VirtualizedContainerService.HintSize="284,135.333333333333" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[assertionImage]" />
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Update Table Content and Row Counter" DisplayName="Update Table Content and Row Counter" sap:VirtualizedContainerService.HintSize="610,178.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[tableContent]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[tableContent+Environment.NewLine+"&lt;tr&gt;&lt;td&gt;"+rowCounter.ToString+"&lt;/td&gt;&lt;td&gt;"+currentItem("Message").ToString+"&lt;/td&gt;&lt;td&gt;"+currentItem("Payload").ToString+"&lt;/td&gt;&lt;td "+If(currentItem("Succeeded").ToString.ToLower="true"," style=""background-color: #3CBA54;""&gt;Pass"," style=""background-color: #DB3236;""&gt;Fail")+"&lt;/td&gt;&lt;td&gt;"+If(currentItem("Succeeded").ToString.ToLower="true","","Functional Failure")+"&lt;/td&gt;"+If(str_base64Image.Trim&lt;&gt;"","&lt;td &gt;&lt;a href=""javascript:void(0);"" onclick=""openImageInNewTab('"+str_base64Image+"');""&gt;Click to view image&lt;/a&gt;&lt;/td&gt;","&lt;td &gt;&lt;/td&gt;")+"&lt;/tr&gt;"]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Int32">[rowCounter]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Int32">[rowCounter+1]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:MultipleAssign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:ReadTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Get Test Case Run HTML Template" Content="[htmlTemplate]" DisplayName="Read Test Case Run HTML Template" FileName="[Assets(&quot;TestRunReportTemplatePath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="478.666666666667,112.666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ReadTextFile>
                <ui:WriteTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Create Test Case Run Report with the information fetched" DisplayName="Generate Test Case Run HTML File" FileName="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;resultReport_&quot;+JobId+&quot;.html&quot;)]" sap:VirtualizedContainerService.HintSize="478.666666666667,99.3333333333333" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[htmlTemplate.Replace(&quot;TableContentToBeReplaced&quot;,tableContent).Replace(&quot;ExecutionStartDate&quot;,executionStartDate).Replace(&quot;ExecutionStartTime&quot;,executionStartTime).Replace(&quot;ExecutionEndTime&quot;,executionEndTime).Replace(&quot;TotalExecutionTime&quot;,TotalExecutionTime).Replace(&quot;VariationToBeReplaced&quot;,if(JObject(&quot;value&quot;)(0)(&quot;InputArguments&quot;).ToString.Trim=&quot;&quot;,&quot;{}&quot;,JObject(&quot;value&quot;)(0)(&quot;InputArguments&quot;).ToString)).Replace(&quot;Test Case Execution Report&quot;,testCaseName.Trim+&quot; Execution Report&quot;).Replace(&quot;TestStepsPassed&quot;,testStepsPassed.ToString).Replace(&quot;TestStepsFailed&quot;,testStepsFailed.ToString)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WriteTextFile>
                <uta:AttachDocument ContinueOnError="{x:Null}" Tags="{x:Null}" DisplayName="Attach Test Run Execution Report" FilePath="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;resultReport_&quot;+JobId+&quot;.html&quot;)]" sap:VirtualizedContainerService.HintSize="478.666666666667,54" sap2010:WorkflowViewState.IdRef="AttachDocument_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uta:AttachDocument>
                <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Test Run Exercution Report from local" sap:VirtualizedContainerService.HintSize="478.666666666667,54" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;resultReport_&quot;+JobId+&quot;.html&quot;)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Delete>
              </Sequence>
              <Sequence sap2010:Annotation.AnnotationText="Scope to generate Test Set Run level execution Report" DisplayName="Test Set Run Execution Report Generation" sap:VirtualizedContainerService.HintSize="2276.66666666667,4516.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="testSetTableContent" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through each Previously Downloaded Attachment Reports" DisplayName="Loop through each Previously Downloaded Attachment Reports" sap:VirtualizedContainerService.HintSize="2214.66666666667,84.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[Directory.GetFiles(Environment.CurrentDirectory,&quot;*.html&quot;)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="attachmentReport" />
                      </ActivityAction.Argument>
                      <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Assertion Image" sap:VirtualizedContainerService.HintSize="284,136.666666666667" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[attachmentReport]" />
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Orchestrator API call to get Test Set Execution Details" DisplayName="Orchestrator API call to get Test Set Execution Details" sap:VirtualizedContainerService.HintSize="2214.66666666667,70.6666666666667" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_3" Method="GET" RelativeEndpoint="[&quot;/odata/TestCaseExecutions?$expand=TestCaseExecutionAttachments&amp;$filter=TestSetExecutionId eq &quot;+testSetExecutionID]" Result="[jsonResponse]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:OrchestratorHttpRequest>
                <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Test Set Execution Log" DisplayName="Deserialize JSON - Test Set Execution Log" sap:VirtualizedContainerService.HintSize="2214.66666666667,84.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[jObject]" JsonString="[jsonResponse]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeserializeJson>
                <If sap2010:Annotation.AnnotationText="Check non of the execution is pending execution to proceed with Test Set Report Generation" Condition="[jObject(&quot;value&quot;).Children().Any(Function(x) x(&quot;Status&quot;).ToString=&quot;Pending&quot;)]" DisplayName="Check if any job is still waiting for allocation" sap:VirtualizedContainerService.HintSize="2214.66666666667,4039.33333333333" sap2010:WorkflowViewState.IdRef="If_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:LogMessage DisplayName="Log Message-Has Pending Execution" sap:VirtualizedContainerService.HintSize="288,54" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;The execution still has some test cases pending for allocation to be executed.&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Scope to Generate Test Set Report" sap:VirtualizedContainerService.HintSize="1880.66666666667,3843.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="testSetName" />
                        <Variable x:TypeArguments="s:DateTime" Name="summaryStartDate" />
                        <Variable x:TypeArguments="x:String" Name="weeklySummary" />
                        <Variable x:TypeArguments="x:Int32" Name="failedCount" />
                        <Variable x:TypeArguments="x:Int32" Name="passedCount" />
                        <Variable x:TypeArguments="x:String" Name="monthlySummary" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:Int32">[rowCounter]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:DateTime">[executionStartedAt]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:DateTime">[TimeZoneInfo.ConvertTimeFromUtc(DateTime.ParseExact(jObject("value")(0)("StartTime").ToString.Split({"."},stringsplitoptions.RemoveEmptyEntries)(0), "MM/dd/yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture),TimezoneInfo.Local)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="Loop through each execution of Test Set" sap:VirtualizedContainerService.HintSize="1818.66666666667,1973.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[jObject(&quot;value&quot;).Children()]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="njl:JObject">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="njl:JObject" Name="executionRun" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Scope to get the Test Execution Attachments" sap:VirtualizedContainerService.HintSize="1782,1844" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="njl:JObject" Name="tcJObject" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MultipleAssign DisplayName="Set Test Case Execution Run Details" sap:VirtualizedContainerService.HintSize="1720,54" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[testCaseName]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[executionRun("EntryPointPath").ToString.Replace(".generated\\","").Replace(".generated\","").Replace(".xaml","").Trim]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[testCaseName]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[if(testCaseName.Contains("\"),testCaseName.Split({"\"},stringsplitoptions.RemoveEmptyEntries).Last(),testCaseName)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MultipleAssign>
                              <If Condition="[(Not executionRun(&quot;TestCaseType&quot;).ToString=&quot;TestDataSetup&quot;)]" DisplayName="Check if the run is not fetch test data variations" sap:VirtualizedContainerService.HintSize="1720,1650.66666666667" sap2010:WorkflowViewState.IdRef="If_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Scope to get the Attachment and config Master Run Details" sap:VirtualizedContainerService.HintSize="1474,1485.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not (if(tcJObject(&quot;value&quot;)(0)(&quot;Status&quot;).ToString&lt;&gt;&quot;Running&quot;,True,arrayJObject.Count&gt;0))]" DisplayName="Loop to check the execution status and wait for the attachments" sap:VirtualizedContainerService.HintSize="1412,54" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                                      <ui:InterruptibleDoWhile.Body>
                                        <Sequence DisplayName="Scope to check the execution Attachment" sap:VirtualizedContainerService.HintSize="416,423.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Orchestrator API call to get Test Set Execution Details" DisplayName="Orchestrator API call to get Test Set Execution Details" sap:VirtualizedContainerService.HintSize="354,70.6666666666667" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_4" Method="GET" RelativeEndpoint="[&quot;/odata/TestCaseExecutions?$expand=TestCaseExecutionAttachments&amp;$filter=Id eq &quot;+executionRun(&quot;Id&quot;).ToString]" Result="[jsonResponse]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:OrchestratorHttpRequest>
                                          <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Test Set Execution Log" DisplayName="Deserialize JSON - Test Case Execution Log" sap:VirtualizedContainerService.HintSize="354,90.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[tcJObject]" JsonString="[jsonResponse]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:DeserializeJson>
                                          <ui:DeserializeJsonArray sap2010:Annotation.AnnotationText="Deserialize JSON - Test Execution Attachment Details" DisplayName="Deserialize JSON - Test Execution Attachment Details" sap:VirtualizedContainerService.HintSize="354,90.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_3" JsonArray="[arrayJObject]" JsonString="[tcJObject(&quot;value&quot;)(0)(&quot;TestCaseExecutionAttachments&quot;).ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:DeserializeJsonArray>
                                        </Sequence>
                                      </ui:InterruptibleDoWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleDoWhile>
                                    <If Condition="[arrayJObject.Count&gt;0]" DisplayName="Check if the Attachments are configured or not to the execution" sap:VirtualizedContainerService.HintSize="1412,1206" sap2010:WorkflowViewState.IdRef="If_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Scope to download the attachment" sap:VirtualizedContainerService.HintSize="932,1040.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Get Test Execution Attachment with Orchestrator HTTP Request" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Get Execution Attachment HTTP Request" EnableSSLVerification="True" EndPoint="[orchestratorBaseURL+&quot;/api/TestAutomation/GetTestCaseExecutionAttachment?testCaseExecutionAttachmentId=&quot;+arrayJObject(0)(&quot;Id&quot;).ToString]" sap:VirtualizedContainerService.HintSize="870,134" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" ResponseAttachment="[responseAttachment]" Result="[responseContent]" StatusCode="[responseStatus]" TimeoutMS="6000">
                                            <ui:HttpClient.Attachments>
                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                            </ui:HttpClient.Attachments>
                                            <ui:HttpClient.Cookies>
                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                            </ui:HttpClient.Cookies>
                                            <ui:HttpClient.Headers>
                                              <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer "+str_bearerToken]</InArgument>
                                            </ui:HttpClient.Headers>
                                            <ui:HttpClient.Parameters>
                                              <InArgument x:TypeArguments="x:String" x:Key="OrganizationUnitId">[organizationID]</InArgument>
                                            </ui:HttpClient.Parameters>
                                            <ui:HttpClient.UrlSegments>
                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                            </ui:HttpClient.UrlSegments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:HttpClient>
                                          <Delay DisplayName="Delay - 2 sec" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="870,25.3333333333333" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                          <If Condition="[responseStatus=200]" DisplayName="Check if we have Attachment Downloaded" sap:VirtualizedContainerService.HintSize="870,710" sap2010:WorkflowViewState.IdRef="If_6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="496,544.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:RenameFileX DisplayName="Rename Downloaded File" FilePath="[Directory.GetFiles(Path.GetDirectoryName(responseAttachment.LocalPath),&quot;*.&quot;+responseAttachment.GetExtension()).First()]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="False" NewName="[Path.Combine(Path.GetDirectoryName(responseAttachment.LocalPath),arrayJObject(0)(&quot;FileName&quot;).ToString)]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:RenameFileX>
                                                <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;)]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="MoveFile_1" Path="[Path.Combine(Path.GetDirectoryName(responseAttachment.LocalPath),arrayJObject(0)(&quot;FileName&quot;).ToString)]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:MoveFile>
                                                <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request" sap:VirtualizedContainerService.HintSize="434,25.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_5" Method="GET" RelativeEndpoint="[&quot;/odata/TestCaseExecutions?$expand=TestCaseAssertions&amp;$filter=ID eq &quot;+executionRun(&quot;Id&quot;).ToString]" Result="[responseContent]" StatusCode="[responseStatus]" />
                                                <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" sap2010:Annotation.AnnotationText="Deserialize JSON - Test Case Execution Assertions" DisplayName="Deserialize JSON - Test Case Execution Assertions" sap:VirtualizedContainerService.HintSize="434,90.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7" JsonObject="[tcJObject]" JsonString="[responseContent]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:DeserializeJson>
                                                <Assign DisplayName="Set the Test Case Run Information" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[testSetTableContent]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[testSetTableContent+Environment.NewLine+"&lt;tr&gt;&lt;td&gt;"+rowCounter.ToString+"&lt;/td&gt;&lt;td&gt;"+testCaseName+"&lt;/td&gt;&lt;td&gt;"+If(executionRun("DataVariationIdentifier").ToString.Trim&lt;&gt;"",executionRun("DataVariationIdentifier").ToString,"1")+"&lt;/td&gt;&lt;td "+If(tcJObject("value")(0)("TestCaseAssertions").Children().All(Function(x) x("Succeeded").ToString.ToLower.Equals("true"))," style=""background-color: #7FFF7F;""&gt;Pass"," style=""background-color: #FF7F7F;""&gt;Fail")+"&lt;/td&gt;&lt;td &gt;&lt;a href="+arrayJObject(0)("FileName").ToString+" target=""_blank""&gt;Click to view report&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;"]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <ui:LogMessage DisplayName="Log Message - Execution Attachment Failed to download" sap:VirtualizedContainerService.HintSize="328,54" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Failed to download attachment &quot;+arrayJObject(0)(&quot;FileName&quot;).ToString]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:LogMessage>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Assign DisplayName="Set the Test Case Run Information" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[testSetTableContent]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[testSetTableContent+Environment.NewLine+"&lt;tr&gt;&lt;td&gt;"+rowCounter.ToString+"&lt;/td&gt;&lt;td&gt;"+testCaseName+"&lt;/td&gt;&lt;td&gt;"+If(executionRun("DataVariationIdentifier").ToString.Trim&lt;&gt;"",executionRun("DataVariationIdentifier").ToString,"1")+"&lt;/td&gt;&lt;td "+If(tcJObject("value")(0)("TestCaseAssertions").Children().All(Function(x) x("Succeeded").ToString.ToLower.Equals("true"))," style=""background-color: #7FFF7F;""&gt;Pass"," style=""background-color: #FF7F7F;""&gt;Fail")+"&lt;/td&gt;&lt;td &gt;&lt;/td&gt;&lt;/tr&gt;"]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                    <Assign DisplayName="Increment Row Counter" sap:VirtualizedContainerService.HintSize="1412,54" sap2010:WorkflowViewState.IdRef="Assign_7">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[rowCounter]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[rowCounter+1]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Skipping &quot;+testCaseName+&quot;...&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - To Get the Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,25.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_6" Method="GET" RelativeEndpoint="[&quot;/odata/TestSetExecutions?$filter=id eq &quot;+testSetExecutionID]" Result="[jsonResponse]" />
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON - Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8" JsonObject="[jObject]" JsonString="[jsonResponse]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:DeserializeJson>
                      <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - To Get the Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,25.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_7" Method="GET" RelativeEndpoint="[&quot;/odata/TestSetExecutions?$filter=&quot;+if(JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString.ToLower.Contains(&quot;.generated\&quot;),&quot;contains(Name, '&quot;+JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString.Split({&quot; - &quot;},stringsplitoptions.RemoveEmptyEntries)(0)+&quot;')&quot;,&quot;Name eq '&quot;+JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString+&quot;'&quot;)+ &quot; and StartTime ge &quot;+Now.AddDays(-7).ToString(&quot;yyyy-MM-dd&quot;)]" Result="[jsonResponse]" />
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON - Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9" JsonObject="[jObject]" JsonString="[jsonResponse]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:DeserializeJson>
                      <ui:MultipleAssign DisplayName="Get the Test Set Name and Summary Start Date Details" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[testSetName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(JObject("value")(0)("Name").ToString.ToLower.Contains(".generated\"),if(testCaseName.Contains("\"),testCaseName.Split({"\"},stringsplitoptions.RemoveEmptyEntries).Last(),testCaseName),JObject("value")(0)("Name").ToString)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:DateTime">[summaryStartDate]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:DateTime">[Now.AddDays(-7)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[summaryStartDate&lt;=Now]" DisplayName="Loop to iterate through all the resulted details" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                        <ui:InterruptibleWhile.Body>
                          <ui:MultipleAssign DisplayName="Get the test execution details" sap:VirtualizedContainerService.HintSize="478.666666666667,209.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Int32">[passedCount]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Int32">[jObject("value").Where(Function(x) x("Status").ToString() = "Passed" AndAlso DateTime.Parse(x("StartTime").ToString()).Date = summaryStartDate.Date).ToList().Count]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Int32">[failedCount]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Int32">[jObject("value").Where(Function(x) x("Status").ToString() = "Failed" AndAlso DateTime.Parse(x("StartTime").ToString()).Date = summaryStartDate.Date).ToList().Count]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[weeklySummary]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[weeklySummary+"{ date: '"+summaryStartDate.ToString("dd-MMM")+"', pass: "+passedCount.ToString+", fail: "+failedCount.ToString+" },"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[summaryStartDate]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[summaryStartDate.AddDays(1)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </ui:InterruptibleWhile.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - To Get the Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,25.3333333333333" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_8" Method="GET" RelativeEndpoint="[&quot;/odata/TestSetExecutions?$filter=&quot;+if(JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString.ToLower.Contains(&quot;.generated\&quot;),&quot;contains(Name, '&quot;+JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString.Split({&quot; - &quot;},stringsplitoptions.RemoveEmptyEntries)(0)+&quot;')&quot;,&quot;Name eq '&quot;+JObject(&quot;value&quot;)(0)(&quot;Name&quot;).ToString+&quot;'&quot;)+ &quot; and StartTime ge &quot;+Now.AddDays(-30).ToString(&quot;yyyy-MM-dd&quot;)]" Result="[jsonResponse]" />
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON - Test Set Execution Log" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_10" JsonObject="[jObject]" JsonString="[jsonResponse]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:DeserializeJson>
                      <Assign DisplayName="set Date Summary Start" sap:VirtualizedContainerService.HintSize="1818.66666666667,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[summaryStartDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[Now.AddDays(-30)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[summaryStartDate&lt;=Now]" DisplayName="Loop to iterate through all the resulted details" sap:VirtualizedContainerService.HintSize="1818.66666666667,380" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                        <ui:InterruptibleWhile.Body>
                          <ui:MultipleAssign DisplayName="Get the test execution details" sap:VirtualizedContainerService.HintSize="478.666666666667,209.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Int32">[passedCount]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Int32">[jObject("value").Where(Function(x) x("Status").ToString() = "Passed" AndAlso DateTime.Parse(x("StartTime").ToString()).Date &gt;= summaryStartDate.Date AndAlso DateTime.Parse(x("StartTime").ToString()).Date &lt;= summaryStartDate.AddDays(6).Date).ToList().Count]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Int32">[failedCount]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Int32">[jObject("value").Where(Function(x) x("Status").ToString() = "Failed" AndAlso DateTime.Parse(x("StartTime").ToString()).Date &gt;= summaryStartDate.Date AndAlso DateTime.Parse(x("StartTime").ToString()).Date &lt;= summaryStartDate.AddDays(6).Date).ToList().Count]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[monthlySummary]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[monthlySummary+"{ date: '"+summaryStartDate.ToString("dd-MMM")+" - "+summaryStartDate.AddDays(6).ToString("dd-MMM")+"', pass: "+passedCount.ToString+", fail: "+failedCount.ToString+" },"]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[summaryStartDate]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[summaryStartDate.AddDays(7)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                        </ui:InterruptibleWhile.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:ReadTextFile File="{x:Null}" Content="[htmlTemplate]" DisplayName="Read Text File" FileName="Data\Input\TestSetRunTemplate.html" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ReadTextFile>
                      <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;,&quot;resultReport_&quot;+testSetName+testSetExecutionID+&quot;.html&quot;)]" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[htmlTemplate.Replace(&quot;TableContentToBeReplaced&quot;,testSetTableContent).Replace(&quot;ExecutionStartDate&quot;,executionStartedAt.ToString(&quot;dd-MMM-yyyy&quot;)).Replace(&quot;ExecutionStartTime&quot;,executionStartedAt.ToString(&quot;HH:mm:ss&quot;)).Replace(&quot;ExecutionEndTime&quot;,Now.ToString(&quot;HH:mm:ss&quot;)).Replace(&quot;TotalExecutionTime&quot;,String.Format(&quot;{0:hh\:mm\:ss}&quot;, Now - executionStartedAt)).Replace(&quot;Test Set Execution Report&quot;,testSetName.Trim+&quot; Execution Report&quot;).Replace(&quot;WeeklySummaryDataToBeReplaced&quot;,weeklySummary).Replace(&quot;MonthlySummaryDataToBeReplaced&quot;,monthlySummary)]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WriteTextFile>
                      <uascw:CompressFiles CompressedFileInfo="{x:Null}" CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" AllowDuplicateContentNames="False" CodePage="Default" CompressedFileName="TestSummary.zip" CompressionLevel="Normal" DisplayName="Compress/Zip Files" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="CompressFiles_1" OverrideExistingFile="True">
                        <uascw:CompressFiles.ContentToArchive>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Path.Combine(Assets("ReportFolder").ToString,"Reports")]</InArgument>
                          </scg:List>
                        </uascw:CompressFiles.ContentToArchive>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uascw:CompressFiles>
                      <uta:AttachDocument ContinueOnError="{x:Null}" Tags="{x:Null}" DisplayName="Attach Document" FilePath="TestSummary.zip" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="AttachDocument_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uta:AttachDocument>
                      <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="1818.66666666667,54" sap2010:WorkflowViewState.IdRef="Delete_6" Path="TestSummary.zip">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:Delete>
                      <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.html" Folder="[Path.Combine(Assets(&quot;ReportFolder&quot;).ToString,&quot;Reports&quot;)]" sap:VirtualizedContainerService.HintSize="1818.66666666667,83.3333333333333" sap2010:WorkflowViewState.IdRef="ForEachFileX_3" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                        <ui:ForEachFileX.Body>
                          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                            <ActivityAction.Argument1>
                              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="reportFile" />
                            </ActivityAction.Argument1>
                            <ActivityAction.Argument2>
                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                            </ActivityAction.Argument2>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,189.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="354,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_3" Path="[reportFile.FullName]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachFileX.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachFileX>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
          </Sequence>
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message - Execution not triggered from Orchestrator" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Run Report cannot be generated as the execution is not registered/triggered from Orchestrator/Test Manager&quot;]" />
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>